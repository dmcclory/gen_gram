#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module GenGram
  class Parser < Racc::Parser

module_eval(<<'...end sentences.y/module_eval...', 'sentences.y', 22)

def parse(tokens)
  @tokens = tokens
  do_parse
end

def next_token
  @tokens.shift
end
...end sentences.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,     5,    14,     4,     5,    15,    11,     9,    11,     4,
     5,     8,     6,    12 ]

racc_action_check = [
     8,     8,     8,     0,     0,    11,    11,     4,     4,    13,
    13,     3,     1,     6 ]

racc_action_pointer = [
     1,    12,   nil,     6,     4,   nil,    13,   nil,    -2,   nil,
   nil,     2,   nil,     7,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -12,   -12,    -1,   -12,   -12,    -5,   -12,    -2,    -8,    -3,
    -4,   -12,    18,    -9,   -11,    -6,    -7,   -10 ]

racc_goto_table = [
     3,     2,    10,     7,     1,   nil,   nil,   nil,    13,    16,
   nil,   nil,   nil,    17 ]

racc_goto_check = [
     3,     2,     5,     4,     1,   nil,   nil,   nil,     3,     5,
   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     4,     1,     0,     0,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 7, :_reduce_1,
  2, 8, :_reduce_none,
  2, 9, :_reduce_none,
  2, 9, :_reduce_none,
  1, 9, :_reduce_none,
  2, 11, :_reduce_none,
  2, 11, :_reduce_none,
  1, 10, :_reduce_none,
  2, 10, :_reduce_none,
  3, 10, :_reduce_none,
  2, 10, :_reduce_none ]

racc_reduce_n = 12

racc_shift_n = 18

racc_token_table = {
  false => 0,
  :error => 1,
  :DET => 2,
  :N => 3,
  :A => 4,
  :V => 5 }

racc_nt_base = 6

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DET",
  "N",
  "A",
  "V",
  "$start",
  "target",
  "S",
  "NP",
  "VP",
  "AP" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'sentences.y', 3)
  def _reduce_1(val, _values, result)
     result =  "success" 
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module GenGram
